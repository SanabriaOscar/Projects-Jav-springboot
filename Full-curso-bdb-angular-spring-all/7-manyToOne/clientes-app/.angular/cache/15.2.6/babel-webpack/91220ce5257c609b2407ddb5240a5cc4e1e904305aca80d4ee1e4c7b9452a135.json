{"ast":null,"code":"import Swal from 'sweetalert2';\nimport { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./cliente.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../paginator/paginator.component\";\nimport * as i5 from \"./detalle/detalle.component\";\nfunction ClientesComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \" no hay registros en la base de datos \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a1) {\n  return [\"/clientes/ver/\", a1];\n};\nconst _c1 = function (a1) {\n  return [\"/clientes/form/\", a1];\n};\nfunction ClientesComponent_table_11_tr_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"button\", 13);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\")(13, \"button\", 14);\n    i0.ɵɵtext(14, \"Editar\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"td\", 15)(16, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function ClientesComponent_table_11_tr_18_Template_button_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const cliente_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.delete(cliente_r4));\n    });\n    i0.ɵɵtext(17, \"Eliminar\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const cliente_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(7, _c0, cliente_r4.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", cliente_r4.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cliente_r4.nombre);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cliente_r4.apellido);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cliente_r4.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cliente_r4.createAt);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(9, _c1, cliente_r4.id));\n  }\n}\nfunction ClientesComponent_table_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 11)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Id\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Nombre\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Apellido\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\");\n    i0.ɵɵtext(12, \"Fecha\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"th\");\n    i0.ɵɵtext(14, \"Editar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"th\");\n    i0.ɵɵtext(16, \"Eliminar\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(17, \"tbody\");\n    i0.ɵɵtemplate(18, ClientesComponent_table_11_tr_18_Template, 18, 11, \"tr\", 12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(18);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.clientes);\n  }\n}\nfunction ClientesComponent_app_paginator_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-paginator\", 17);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"paginador\", ctx_r2.paginador);\n  }\n}\nconst _c2 = function () {\n  return [\"/clientes/form\"];\n};\nexport class ClientesComponent {\n  constructor(clienteService, activatedRoute) {\n    this.clienteService = clienteService;\n    this.activatedRoute = activatedRoute;\n    // clientes:Cliente[] | undefined;\n    this.clientes = [];\n  }\n  ngOnInit() {\n    //codigo del tutorial paginador\n    this.activatedRoute.paramMap.subscribe(params => {\n      let page = Number(params.get('page'));\n      if (!page) {\n        page = 0;\n      }\n      this.clienteService.getClientes(page).pipe(tap(response => {\n        response.content.forEach(cliente => {\n          console.log(cliente.nombre);\n        });\n      })).subscribe(response => {\n        this.clientes = response.content;\n        this.paginador = response;\n      });\n      //asignar los atributos propios del paginador\n    });\n    /*-------code sin el paginador---------------\r\n    let page = 0;\r\n    this.clienteService.getClientes(page).subscribe(\r\n    response => {\r\n    this.clientes = response;\r\n    },\r\n    error => {\r\n    console.log('Error al obtener los clientes: ', error);\r\n    }\r\n    );*/\n    // this.clientes=this.clienteService.getClientes();\n    /* codigo que funcion sin el paginador*/\n    /*this.clienteService.getClientes().subscribe(\r\n    clientes => this.clientes=clientes\r\n    );*/\n  }\n\n  delete(cliente) {\n    const swalWithBootstrapButtons = Swal.mixin({\n      customClass: {\n        confirmButton: 'btn btn-success',\n        cancelButton: 'btn btn-danger'\n      },\n      buttonsStyling: false\n    });\n    swalWithBootstrapButtons.fire({\n      title: 'Está seguro?',\n      text: `Seguro que desea eliminar el cliente ${cliente.nombre}?`,\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Si, eliminar!',\n      cancelButtonText: 'No, cancelar!',\n      reverseButtons: true\n    }).then(result => {\n      if (result.isConfirmed) {\n        this.clienteService.delete(cliente.id).subscribe(response => {\n          this.clientes = this.clientes?.filter(cli => cli !== cliente);\n          swalWithBootstrapButtons.fire('Cliente eliminado!', `Cliente ${cliente.nombre} eliminado con éxito!`, 'success');\n        });\n      }\n    });\n  }\n}\nClientesComponent.ɵfac = function ClientesComponent_Factory(t) {\n  return new (t || ClientesComponent)(i0.ɵɵdirectiveInject(i1.ClienteService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nClientesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ClientesComponent,\n  selectors: [[\"app-clientes\"]],\n  decls: 13,\n  vars: 6,\n  consts: [[3, \"cliente\"], [1, \"card\", \"text-bg-secundary\", \"mb-3\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"my-2\", \"text-left\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"btn-rounded\", 3, \"routerLink\"], [\"class\", \"alert alert-info mt-3\", 4, \"ngIf\"], [\"class\", \"table table-bordered table-striped text-center\", 4, \"ngIf\"], [3, \"paginador\", 4, \"ngIf\"], [1, \"alert\", \"alert-info\", \"mt-3\"], [1, \"table\", \"table-bordered\", \"table-striped\", \"text-center\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"routerLink\"], [\"type\", \"button\", \"name\", \"editar\", 1, \"btn\", \"btn-primary\", 3, \"routerLink\"], [1, \"center\"], [\"type\", \"button\", \"name\", \"eliminar\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [3, \"paginador\"]],\n  template: function ClientesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"detalle-cliente\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵtext(3, \"Clientes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"h5\", 4);\n      i0.ɵɵtext(6, \"listado de clientes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"button\", 6);\n      i0.ɵɵtext(9, \"Crear cliente\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, ClientesComponent_div_10_Template, 2, 0, \"div\", 7);\n      i0.ɵɵtemplate(11, ClientesComponent_table_11_Template, 19, 1, \"table\", 8);\n      i0.ɵɵtemplate(12, ClientesComponent_app_paginator_12_Template, 1, 1, \"app-paginator\", 9);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"cliente\", ctx.clienteSeleccionado || null);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(5, _c2));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", (ctx.clientes == null ? null : ctx.clientes.length) === 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.clientes == null ? null : ctx.clientes.length);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.paginador);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i2.RouterLink, i4.PaginatorComponent, i5.DetalleComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Swal","tap","i0","ClientesComponent","constructor","clienteService","activatedRoute","ngOnInit","paramMap","subscribe","params","page","Number","get","getClientes","pipe","response","content","forEach","cliente","console","log","nombre","clientes","paginador","delete","swalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","fire","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","then","result","isConfirmed","id","filter","cli","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Oscar Jesus Sanabria\\Documents\\GitHub\\Projects-Jav-springboot\\Full-curso-bdb-angular-spring-all\\6-creación-perfil-imagenes\\clientes-app\\src\\app\\clientes\\clientes.component.ts","C:\\Users\\Oscar Jesus Sanabria\\Documents\\GitHub\\Projects-Jav-springboot\\Full-curso-bdb-angular-spring-all\\6-creación-perfil-imagenes\\clientes-app\\src\\app\\clientes\\clientes.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Cliente } from './cliente';\nimport { ClienteService } from './cliente.service';\nimport Swal from 'sweetalert2';\nimport { tap } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-clientes',\n  templateUrl: './clientes.component.html',\n  styleUrls: ['./clientes.component.css']\n})\nexport class ClientesComponent {\n // clientes:Cliente[] | undefined;\n  clientes: any[] = [];\n  paginador: any;\n  clienteSeleccionado: Cliente | undefined;\n\n    constructor(private clienteService: ClienteService,\n      private activatedRoute: ActivatedRoute){}\n    ngOnInit() {\n       //codigo del tutorial paginador\n       \n       this.activatedRoute.paramMap.subscribe( params =>{    \n        let page:number = Number(params.get('page'));\n        if(!page){\n          page=0\n        }\n        this.clienteService.getClientes(page)\n        .pipe(\n          tap((response: any) => {\n            (response.content as Cliente[]).forEach(cliente => {\n              console.log(cliente.nombre);\n            });\n          })\n        ).subscribe(response => {this.clientes = response.content as Cliente[]\n          this.paginador=response;\n        }\n          );\n        //asignar los atributos propios del paginador\n          \n      }\n\n       );\n            \n      /*-------code sin el paginador---------------\n      let page = 0;\n this.clienteService.getClientes(page).subscribe(\n    response => {\n      this.clientes = response;\n    },\n    error => {\n      console.log('Error al obtener los clientes: ', error);\n    }\n  );*/\n     // this.clientes=this.clienteService.getClientes();\n      \n     /* codigo que funcion sin el paginador*/\n      /*this.clienteService.getClientes().subscribe(\n      clientes => this.clientes=clientes\n      );*/\n     \n      \n      }\n    \n    \n\n    delete(cliente: Cliente):void{\n      const swalWithBootstrapButtons = Swal.mixin({\n        customClass: {\n          confirmButton: 'btn btn-success',\n          cancelButton: 'btn btn-danger'\n        },\n        buttonsStyling: false\n      })\n      \n      swalWithBootstrapButtons.fire({\n        title: 'Está seguro?',\n        text: `Seguro que desea eliminar el cliente ${cliente.nombre}?`,\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si, eliminar!',\n        cancelButtonText: 'No, cancelar!',\n        reverseButtons: true\n      }).then((result) => {\n        if (result.isConfirmed) {\n          this.clienteService.delete(cliente.id).subscribe(\n              response =>{\n                this.clientes=this.clientes?.filter(cli =>cli !==cliente)\n                swalWithBootstrapButtons.fire(\n                  'Cliente eliminado!',\n                  `Cliente ${cliente.nombre} eliminado con éxito!`,\n                  'success'\n                )\n              }\n          )\n         \n        } \n      })\n    }\n\n}\n","<detalle-cliente [cliente]=\"clienteSeleccionado || null\"></detalle-cliente>\n\n\n<div class=\"card text-bg-secundary mb-3\">\n    <div class=\"card-header\">Clientes</div>\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">listado de clientes</h5>\n      <div class=\"my-2 text-left\">\n        <button class=\"btn btn-primary btn-rounded \" type=\"button\" [routerLink]=\"['/clientes/form']\">Crear cliente</button>\n        <div  *ngIf=\"clientes?.length===0\" class=\"alert alert-info mt-3\">\n            no hay registros en la base de datos\n        </div>\n<table class=\"table table-bordered table-striped text-center\" *ngIf=\"clientes?.length\" >\n      \n    <thead>\n        <tr>\n            <th>Id</th>\n            <th>Nombre</th>\n            <th>Apellido</th>\n            <th>Email</th>\n            <th>Fecha</th>\n            <th>Editar</th>\n            <th>Eliminar</th>\n        </tr>\n    </thead>\n\n    <tbody>\n        <tr *ngFor=\"let cliente of clientes\">\n            <td ><button type=\"button\" [routerLink]=\"['/clientes/ver/',cliente.id]\" class=\"btn btn-success\">\n                {{cliente.id}}</button></td>\n            <td >{{cliente.nombre}}</td>\n            <td >{{cliente.apellido}}</td>\n            <td >{{cliente.email}}</td>\n            <td >{{cliente.createAt}}</td>\n            <td>\n                <button type=\"button\" name=\"editar\" [routerLink]=\"['/clientes/form/',cliente.id]\" class=\"btn btn-primary\">Editar</button>\n              </td>\n              <td class=\"center\">\n                <button type=\"button\" name=\"eliminar\" (click)='delete(cliente)' class=\"btn btn-danger\">Eliminar</button>\n              </td>\n        </tr>\n    </tbody>\n</table>\n<app-paginator *ngIf=\"paginador\" [paginador] =\"paginador\"></app-paginator>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}